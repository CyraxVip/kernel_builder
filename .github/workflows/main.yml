name: Building kernel

on: # [push]
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  watch:
    types: [started]

env:
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  CHAT_ID: ${{ secrets.CHAT_ID }}
  REPO: TelegramAt25/android_kernel_xiaomi_selene
  KERNEL_BRANCH: thirteen
  SCRIPTS: EvaGCC
  TZ: Asia/Ho_Chi_Minh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
        - name: checkout
          uses: actions/checkout@master

        - name: initialize environment
          run: |
            bash tg_utils.sh msg "initializing environment for kernel compilation | github build ${{ github.run_number }}_${{ github.run_attempt }}"
            sudo apt-get update
            sudo apt-get install llvm lld bc bison ca-certificates curl flex gcc git libc6-dev libssl-dev openssl python3 zip zstd make clang gcc-arm-linux-gnueabi software-properties-common -y
        - name: clone kernel source
          run: |
            bash tg_utils.sh msg "cloning kernel source | repo: $REPO"
            git clone --depth=1 https://github.com/$REPO -b $KERNEL_BRANCH kernel
        - name: run compilation script
          run: |
            bash tg_utils.sh msg "running compilation script(s): $SCRIPTS"
            cd kernel
            sudo bash ../build.sh "$SCRIPTS"
        - name: upload
          run: |
            cd kernel
            ZIP=$(echo *.zip)
            if [ -e $ZIP ]; then
                bash ../tg_utils.sh up "$ZIP" ""
            else
                bash ../tg_utils.sh up "out/error.log" ""
            fi


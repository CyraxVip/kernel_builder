name: Building kernel

on: # [push]
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      COMPILER:
        description: 'compilers used'
        required: true
        default: 'Neutron-Clang'
  watch:
    types: [started]

env:
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  CHAT_ID: ${{ secrets.CHAT_ID }}
  REPO: TelegramAt25/android_kernel_xiaomi_selene
  RUN_NUM: ${{ github.run_number }}_${{ github.run_attempt }}
  KERNEL_BRANCH: thirteen
  COMPILERS: ${{ github.event.inputs.COMPILER }}
  TZ: Asia/Ho_Chi_Minh

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:kinetic

    steps:
        - name: checkout
          uses: actions/checkout@master
        - name: init build env
          run: |
            apt-get update
            apt-get install llvm lld bc bison ca-certificates curl flex gcc git libc6-dev \
              libssl-dev openssl python3 python2 zip zstd make clang gcc-arm-linux-gnueabi \
              software-properties-common device-tree-compiler libxml2 libarchive-tools \
              libelf-dev libssl-dev libtfm-dev wget xz-utils -y
            ln -sf "/usr/bin/python3" /usr/bin/python
        - name: clone kernel source
          run: |
            bash tg_utils.sh msg "gh $RUN_NUM: cloning kernel source%nlgh $RUN_NUM: repo: $REPO"
            git clone --depth=1 https://github.com/$REPO -b $KERNEL_BRANCH kernel
        - name: run compilation scripts
          run: |
            bash tg_utils.sh msg "gh $RUN_NUM: running compilation script(s): $COMPILERS"
            cd kernel
            bash ../build.sh "$COMPILERS"
        - name: upload
          run: |
            for file in $(find . -maxdepth 1 -name '*.zip'); do
              bash ../tg_utils.sh up "${file}" '$(cat "${file}.info")'
            done
            for file in $(find . -maxdepth 1 -name '*.log'); do
              bash ../tg_utils.sh up "${file}" '$(cat "${file}.info")'
            done
        - name: if it fails
          if: ${{ failure() }}
          run: |
            bash tg_utils.sh msg "gh $RUN_NUM: workflow failed"
        - name: notify the end of the workflow
          run: |
            bash tg_utils.sh msg "gh $RUN_NUM: workflow ended"

